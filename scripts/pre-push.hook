#!/bin/bash

# Pre-push hook for GitScrolls
# Runs the exact same checks as GitHub Actions

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "üîç Running GitScrolls Validation Suite (same as GitHub Actions)..."

# Function to run a step and check result
run_step() {
    local step_name="$1"
    local command="$2"
    local continue_on_error="${3:-false}"
    
    echo -e "\n${BLUE}=== ${step_name} ===${NC}"
    
    if eval "$command"; then
        echo -e "${GREEN}‚úÖ ${step_name} passed${NC}"
        return 0
    else
        if [ "$continue_on_error" = "true" ]; then
            echo -e "${YELLOW}‚ö†Ô∏è  ${step_name} failed (continuing anyway)${NC}"
            return 0
        else
            echo -e "${RED}‚ùå ${step_name} failed${NC}"
            return 1
        fi
    fi
}

# Build test container (matching GitHub Actions)
if ! run_step "Build test container" "docker compose build test"; then
    echo -e "${RED}Failed to build test container. Aborting push.${NC}"
    exit 1
fi

# Run syntax validation (matching GitHub Actions)
if ! run_step "Running Markdown Syntax Validation" "docker compose run --rm -T -e CI=true test npm run test:syntax"; then
    echo -e "${RED}Syntax validation failed. Please fix the issues before pushing.${NC}"
    exit 1
fi

# Run style consistency validation (matching GitHub Actions - continues on error)
run_step "Running Style Consistency Validation" "docker compose run --rm -T -e CI=true test npm run test:style" "true"

# Run all tests with coverage (matching GitHub Actions)
if ! run_step "Running All Tests with Coverage" "docker compose run --rm -T -e CI=true test npm run test:ci"; then
    echo -e "${RED}Tests failed! Please fix the issues before pushing.${NC}"
    echo -e "${YELLOW}üí° Run 'docker compose run --rm test npm test' to see all errors.${NC}"
    exit 1
fi

echo -e "\n${GREEN}‚úÖ All GitScrolls validation checks passed! Proceeding with push...${NC}"